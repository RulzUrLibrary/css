// Value used to lighten or darken a button's color depending on its state
$color-modifier: 10;

button, .button {
  // <button> reset.
  // (See: https://github.com/necolas/normalize.css/blob/master/normalize.css)
  overflow: visible;
  text-transform: none;
  margin: 0;
  border: 0;
  position: relative;
  overflow: hidden;
  // <button> don't inherit their parent font.
  font: inherit;
  // <button> don't inherit this property from <html>.
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  color: $dark;
  box-shadow: $shadow-2;
  transition: background-color $transition-speed ease, color $transition-speed ease, box-shadow $transition-speed ease;
  background: $lighter;

  span {
    position: relative;
    z-index: 1;
  }

  // By default, buttons that takes up the entire width of its container
  display: block;
  width: 100%;
  text-decoration: none;

  padding: .5em 1.5em;
  border-radius: 2px;

  font-size: 1rem;
  text-align: center;
  white-space: nowrap;

  cursor: pointer;
  user-select: none;

  &::before {
    content: '';
    position: absolute;
    background: darken($lighter, 40%);
    border: 50vh solid darken($lighter, 20%);
    width: 30vh;
    height: 30vh;
    border-radius: 50%;
    display: block;
    top: 50%;
    left: 50%;
    z-index: 0;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }

  // Buttons you shouldn't be able to click on it
  &.disabled,
  &:disabled{
    pointer-events: none;
    opacity: .4;
  }

  // Buttons that takes up the entire width of its container
  &.block {
    display: block;
    width: 100%;
  }

  // BUTTON STYLES

  // Default: for standard actions
  &:hover {
    box-shadow: $shadow-6;
    background: darken($lighter, $color-modifier);
  }

  //&.selected, &:active { background: lighten($lighter, $color-modifier); }

  &:active, &:focus {
    &::before {
      transition: transform ($transition-speed * 4) ease, opacity $transition-speed ease ($transition-speed * 1.3);
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
  }

  &:focus {
    outline: none;
  }

  // Primary: for primary actions in forms
  &.primary {
    background: $primary;
    color: #fff;
  }
  &.primary:hover { background: darken($primary, $color-modifier); }
  //&.primary.selected,
  //&.primary:active { background: lighten($primary, $color-modifier); }
  &.primary::before { background: darken($primary, 40%); border: 50vh solid darken($primary, 20%); }


  // Success: for form whenever it creates something
  &.success {
    background: $success;
    color: #fff;
  }
  &.success:hover { background: darken($success, $color-modifier); }
  //&.success.selected,
  //&.success:active { background: lighten($success, $color-modifier); }
  &.success::before { background: darken($success, 40%); border: 50vh solid darken($success, 20%); }

  // Danger: for bad/destructive actions
  &.danger {
    background: $danger;
    color: #fff;
  }
  &.danger:hover { background: darken($danger, $color-modifier); }
  //&.danger.selected,
  //&.danger:active { background: lighten($danger, $color-modifier); }
  &.danger::before { background: darken($danger, 40%); border: 50vh solid darken($danger, 20%); }

  // Alternate style
  &.dark {
    background: $dark;
    color: #fff;
  }
  &.dark:hover { background: darken($dark, $color-modifier); }
  //&.dark.selected,
  //&.dark:active { background: darken($dark, $color-modifier); }
  &.dark::before { background: darken($dark, 40%); border: 50vh solid darken($dark, 20%); }

  // When the screen is big enough, buttons keep their width
  @include breakpoint(s) {
    display: inline-block;
    width: auto;
  }
}

// Remove inner padding and border in Firefox 4+.
// (See: https://github.com/necolas/normalize.css/blob/master/normalize.css)
button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.button-group {
  & > button, .button {
    margin-left: -4px;
    border-radius: 0;

    // Force buttons in a group to keep their width
    display: inline-block;
    width: auto;
  }

  & > :first-child {
    margin-left: 0;
    border-radius: 2px 0 0 2px;
  }

  & > :last-child {
    border-radius: 0 2px 2px 0;
  }
}
